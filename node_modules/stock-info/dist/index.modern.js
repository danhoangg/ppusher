import r from"axios";const e=e=>new Promise((t,o)=>{if(!e)return o(Error("Stock symbol required"));if("string"!=typeof e)return o(Error("Invalid argument type. Required: string. Found: "+typeof e));const n=`https://query1.finance.yahoo.com/v7/finance/quote?symbols=${e}`,s="undefined"!=typeof window?"https://thingproxy.freeboard.io/fetch/"+n:n;return r.get(s,{headers:{"Content-Type":"application/json"}}).then(r=>{const{data:n}=r;return n&&n.quoteResponse&&n.quoteResponse.result&&0!==n.quoteResponse.result.length?t(n.quoteResponse.result[0]):o(Error(`Error retrieving info for symbol ${e}`))}).catch(r=>o(r))}),t=r=>new Promise((t,o)=>{if(!r)return o(Error("Stock symbol list required"));if(!Array.isArray(r))return o(Error("Invalid argument type. Array required."));const n=[...r];if(!n.length||n.length<1)return Promise.resolve([]);const s=n.map(e);return t(Promise.all(s))});export{e as getSingleStockInfo,t as getStocksInfo};
//# sourceMappingURL=index.modern.js.map
